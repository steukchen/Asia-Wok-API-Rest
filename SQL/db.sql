CREATE TYPE "roles" AS ENUM (
  'superadmin',
  'admin',
  'chef',
  'waiter'
);

CREATE TYPE "states_tables" AS ENUM (
  'enabled',
  'disabled',
  'occupied',
  'reserved'
);

CREATE TYPE "actions" AS ENUM (
  'created',
  'updated',
  'deleted'
);

CREATE TYPE "order_states" AS ENUM (
  'pending',
  'completed',
  'cancelled'
);

CREATE TABLE "users" (
  "id" uuid PRIMARY KEY DEFAULT (gen_random_uuid()),
  "username" varchar(255) UNIQUE NOT NULL,
  "email" varchar(255) NOT NULL,
  "rol" roles NOT NULL,
  "password" varchar(255) NOT NULL,
  "created_at" TIMESTAMPTZ DEFAULT (NOW()),
  "updated_at" TIMESTAMPTZ DEFAULT (NOW())
);

CREATE TABLE "dishes_types" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255) NOT NULL,
  "created_at" TIMESTAMPTZ DEFAULT (NOW()),
  "updated_at" TIMESTAMPTZ DEFAULT (NOW())
);

CREATE TABLE "dishes" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255) NOT NULL,
  "description" text NOT NULL,
  "price" numeric(10,2) NOT NULL,
  "type_id" int NOT NULL,
  "created_at" TIMESTAMPTZ DEFAULT (NOW()),
  "updated_at" TIMESTAMPTZ DEFAULT (NOW())
);

CREATE TABLE "currencies" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255) NOT NULL,
  "exchange" numeric(10,4) NOT NULL,
  "created_at" TIMESTAMPTZ DEFAULT (NOW()),
  "updated_at" TIMESTAMPTZ DEFAULT (NOW())
);

CREATE TABLE "customers" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "ci" varchar(255) UNIQUE NOT NULL,
  "name" varchar(255) NOT NULL,
  "lastname" varchar(255) NOT NULL,
  "phone_number" varchar(255),
  "address" text,
  "created_at" TIMESTAMPTZ DEFAULT (NOW()),
  "updated_at" TIMESTAMPTZ DEFAULT (NOW())
);

CREATE TABLE "orders" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "customer_id" int NOT NULL,
  "order_date" TIMESTAMPTZ DEFAULT (NOW()),
  "created_by" uuid NOT NULL,
  "table_id" int NOT NULL,
  "state" order_states NOT NULL DEFAULT 'pending',
  "created_at" TIMESTAMPTZ DEFAULT (NOW()),
  "updated_at" TIMESTAMPTZ DEFAULT (NOW())
);

CREATE TABLE "order_dishes" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "order_id" int NOT NULL,
  "dish_id" int NOT NULL,
  "quantity" int NOT NULL,
  "created_at" TIMESTAMPTZ DEFAULT (NOW()),
  "updated_at" TIMESTAMPTZ DEFAULT (NOW())
);

CREATE TABLE "order_currencies" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "order_id" int NOT NULL,
  "currency_id" int NOT NULL,
  "quantity" numeric(10,2) NOT NULL,
  "created_at" TIMESTAMPTZ DEFAULT (NOW()),
  "updated_at" TIMESTAMPTZ DEFAULT (NOW())
);

CREATE TABLE "tables" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255) NOT NULL,
  "state" states_tables NOT NULL DEFAULT 'enabled',
  "created_at" TIMESTAMPTZ DEFAULT (NOW()),
  "updated_at" TIMESTAMPTZ DEFAULT (NOW())
);

CREATE TABLE "order_dishes_audit" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "order_id" int,
  "action" actions NOT NULL,
  "old_data" JSONB NOT NULL,
  "new_data" JSONB NOT NULL,
  "changed_by" uuid NOT NULL,
  "changed_at" TIMESTAMPTZ DEFAULT (NOW())
);

CREATE TABLE "order_currencies_audit" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "order_id" int,
  "action" actions NOT NULL,
  "old_data" JSONB NOT NULL,
  "new_data" JSONB NOT NULL,
  "changed_by" uuid NOT NULL,
  "changed_at" TIMESTAMPTZ DEFAULT (NOW())
);

CREATE INDEX ON "orders" ("customer_id", "order_date");

CREATE INDEX ON "orders" ("table_id", "state");

ALTER TABLE "dishes" ADD FOREIGN KEY ("type_id") REFERENCES "dishes_types" ("id");

ALTER TABLE "orders" ADD FOREIGN KEY ("customer_id") REFERENCES "customers" ("id");

ALTER TABLE "orders" ADD FOREIGN KEY ("created_by") REFERENCES "users" ("id");

ALTER TABLE "orders" ADD FOREIGN KEY ("table_id") REFERENCES "tables" ("id");

ALTER TABLE "order_dishes" ADD FOREIGN KEY ("order_id") REFERENCES "orders" ("id");

ALTER TABLE "order_dishes" ADD FOREIGN KEY ("dish_id") REFERENCES "dishes" ("id");

ALTER TABLE "order_currencies" ADD FOREIGN KEY ("order_id") REFERENCES "orders" ("id");

ALTER TABLE "order_currencies" ADD FOREIGN KEY ("currency_id") REFERENCES "currencies" ("id");

ALTER TABLE "order_dishes_audit" ADD FOREIGN KEY ("order_id") REFERENCES "orders" ("id");

ALTER TABLE "order_dishes_audit" ADD FOREIGN KEY ("changed_by") REFERENCES "users" ("id");

ALTER TABLE "order_currencies_audit" ADD FOREIGN KEY ("order_id") REFERENCES "orders" ("id");

ALTER TABLE "order_currencies_audit" ADD FOREIGN KEY ("changed_by") REFERENCES "users" ("id");
